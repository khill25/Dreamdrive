.program cs0_low
.side_set 1 opt
.wrap_target
wait_for_cs:
	wait 0 gpio 3
	jmp pin, read_control_lines ;; the mux pin is set to control lines, jump to read them
	jmp wait_for_cs

read_control_lines:
	in pins, 5
	push 		side 1 ;; push data and also set mux to data pins
	; irq 4
	wait 1 irq 5 ;; wait for a read/write program to let us know the data is ready
	wait 1 gpio 3
.wrap

.program cs1_low
.side_set 1 opt
.wrap_target
wait_for_cs:
	wait 1 gpio 4
	wait 0 gpio 4
	jmp pin, read_control_lines ;; the mux pin is set to control lines, jump to read them
	jmp wait_for_cs

read_control_lines:
	in pins, 5
	push 		side 1 ;; push data and also set mux to data pins
	; irq 4
	wait 1 irq 5 ;; wait for a read/write program to let us know the data is ready
	wait 1 gpio 4
.wrap

.program bus_read_request
.side_set 1 opt
.wrap_target
wait_for_rd:
	; wait 1 irq 4 ;; wait for a cs program to detect an edge
	wait 0 gpio 16

	push ;; alert c we are ready for data
	pull ;; get the data
	out pins, 16
	
	wait 1 gpio 16
	nop 		side 0 ;; flip the mux
	irq 5 ;; let the cs programs know they can start monitoring the pins again
.wrap

.program bus_write_request
.side_set 1 opt
.wrap_target
wait_for_wr:
	; wait 1 irq 4 ;; wait for a cs program to detect an edge
	wait 0 gpio 17

	in pins, 16
	push

	wait 1 gpio 17
	nop 		side 0 ;; flip the mux
	irq 5 ;; let the cs programs know they can start monitoring the pins again
.wrap
