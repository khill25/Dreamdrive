// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// -------------------------------- //
// interconnect_read_from_dreamcast //
// -------------------------------- //

#define interconnect_read_from_dreamcast_wrap_target 0
#define interconnect_read_from_dreamcast_wrap 12

static const uint16_t interconnect_read_from_dreamcast_program_instructions[] = {
            //     .wrap_target
    0x209b, //  0: wait   1 gpio, 27                 
    0xa0eb, //  1: mov    osr, !null                 
    0x6070, //  2: out    null, 16                   
    0xa0ef, //  3: mov    osr, !osr                  
    0x6080, //  4: out    pindirs, 32                
    0x4010, //  5: in     pins, 16                   
    0xa0e6, //  6: mov    osr, isr                   
    0x6008, //  7: out    pins, 8                    
    0x201b, //  8: wait   0 gpio, 27                 
    0x8020, //  9: push   block                      
    0x209b, // 10: wait   1 gpio, 27                 
    0x6008, // 11: out    pins, 8                    
    0x201b, // 12: wait   0 gpio, 27                 
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program interconnect_read_from_dreamcast_program = {
    .instructions = interconnect_read_from_dreamcast_program_instructions,
    .length = 13,
    .origin = -1,
};

static inline pio_sm_config interconnect_read_from_dreamcast_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + interconnect_read_from_dreamcast_wrap_target, offset + interconnect_read_from_dreamcast_wrap);
    return c;
}
#endif

// ------------------ //
// write_to_dreamcast //
// ------------------ //

#define write_to_dreamcast_wrap_target 0
#define write_to_dreamcast_wrap 9

static const uint16_t write_to_dreamcast_program_instructions[] = {
            //     .wrap_target
    0x209a, //  0: wait   1 gpio, 26                 
    0xa0eb, //  1: mov    osr, !null                 
    0x6090, //  2: out    pindirs, 16                
    0x4008, //  3: in     pins, 8                    
    0x201a, //  4: wait   0 gpio, 26                 
    0x209a, //  5: wait   1 gpio, 26                 
    0x4008, //  6: in     pins, 8                    
    0xa0e6, //  7: mov    osr, isr                   
    0x6010, //  8: out    pins, 16                   
    0x201a, //  9: wait   0 gpio, 26                 
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program write_to_dreamcast_program = {
    .instructions = write_to_dreamcast_program_instructions,
    .length = 10,
    .origin = -1,
};

static inline pio_sm_config write_to_dreamcast_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + write_to_dreamcast_wrap_target, offset + write_to_dreamcast_wrap);
    return c;
}
#endif

// ---------------------- //
// mcu_databus_read_write //
// ---------------------- //

#define mcu_databus_read_write_wrap_target 0
#define mcu_databus_read_write_wrap 21

static const uint16_t mcu_databus_read_write_program_instructions[] = {
            //     .wrap_target
    0x209a, //  0: wait   1 gpio, 26                 
    0x00cd, //  1: jmp    pin, 13                    
    0xa0eb, //  2: mov    osr, !null                 
    0x6070, //  3: out    null, 16                   
    0xa0ef, //  4: mov    osr, !osr                  
    0x6080, //  5: out    pindirs, 32                
    0x209b, //  6: wait   1 gpio, 27                 
    0xa0e0, //  7: mov    osr, pins                  
    0x8020, //  8: push   block                      
    0x6008, //  9: out    pins, 8                    
    0x201b, // 10: wait   0 gpio, 27                 
    0x6008, // 11: out    pins, 8                    
    0x0015, // 12: jmp    21                         
    0xa0eb, // 13: mov    osr, !null                 
    0x6090, // 14: out    pindirs, 16                
    0x201b, // 15: wait   0 gpio, 27                 
    0x209b, // 16: wait   1 gpio, 27                 
    0x4008, // 17: in     pins, 8                    
    0x201b, // 18: wait   0 gpio, 27                 
    0x4008, // 19: in     pins, 8                    
    0x6010, // 20: out    pins, 16                   
    0x201a, // 21: wait   0 gpio, 26                 
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program mcu_databus_read_write_program = {
    .instructions = mcu_databus_read_write_program_instructions,
    .length = 22,
    .origin = -1,
};

static inline pio_sm_config mcu_databus_read_write_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + mcu_databus_read_write_wrap_target, offset + mcu_databus_read_write_wrap);
    return c;
}
#endif

